<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/aop 
	    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd ">
	    
	<!-- Root Context: defines shared resources visible to all other web components -->
	
	<!--  AOP -->
	<aop:aspectj-autoproxy />
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<!-- <mvc:annotation-driven /> -->
	
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!--  Handling static requests -->
	<!-- <mvc:resources mapping="/resources/**" location="/resources/" /> -->
	
	
	
	<!-- ************************************************************************ -->
	<!-- User Service Declaration -->
	<bean id="UserService" class="eu.tbelina.spring.service.impl.UserService">
		<property name="userDAO" ref="UserDAO" />
	</bean>

	<!-- User DAO Declaration -->
	<bean id="UserDAO" class="eu.tbelina.spring.dao.impl.hibernate.UserDAO">
		<property name="sessionFactory" ref="SessionFactory" />
	</bean>
	
	<!-- Data Source Declaration -->
	<bean id="DataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="org.postgresql.Driver" />
		<property name="jdbcUrl" value="jdbc:postgresql://localhost:5432/SpringProject" />
		<property name="user" value="postgres" />
		<property name="password" value="postgres" />
		<property name="maxPoolSize" value="10" />
		<property name="maxStatements" value="0" />
		<property name="minPoolSize" value="5" />
	</bean>

	<!-- Session Factory Declaration -->
	<bean id="SessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="DataSource" />
		<property name="annotatedClasses">
			<list>
				<value>eu.tbelina.spring.model.User</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
				<prop key="hibernate.hbm2ddl.auto">create</prop>
				<prop key="hibernate.show_sql">true</prop>
			</props>
		</property>
	</bean>
	<!-- Enable the configuration of transactional behavior based on annotations -->
	<tx:annotation-driven transaction-manager="txManager2" />

	<!-- Transaction Manager is defined -->
	<bean id="txManager2"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="SessionFactory" />
	</bean>
	<!-- ************************************************************************ -->
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	<!-- Jdbc Service Declaration -->
	<!-- <bean id="ExpenseService" class="eu.tbelina.spring.service.impl.ExpenseService">
		<property name="expenseDAO" ref="jdbcExpenseDAO" />
	</bean> -->
	
	<!-- SimpleJdbc Service Declaration -->
	<!-- <bean id="ExpenseService" class="eu.tbelina.spring.service.impl.ExpenseService">
		<property name="expenseDAO" ref="simpleJdbcExpenseDAO" />
	</bean> -->
	
	<!-- Hibernate Service Declaration -->
	<!-- <bean id="expenseService" class="eu.tbelina.spring.service.impl.ExpenseService">
		<property name="expenseDAO" ref="hibernateExpenseDAO" />
	</bean> -->
	
	 
	<!-- Jdbc Expense DAO Declaration -->
	<!-- <bean id="jdbcExpenseDAO" class="eu.tbelina.spring.dao.impl.jdbc.JdbcExpenseDAO">
		<property name="dataSource" ref="jdbcDataSource" />
	</bean> -->
	
	<!-- SimpleJdbc Expense DAO Declaration -->
	<!-- <bean id="simpleJdbcExpenseDAO" class="eu.tbelina.spring.dao.impl.jdbc.SimpleJdbcExpenseDAO">
		<property name="dataSource" ref="jdbcDataSource" />
	</bean>  -->
	
	<!-- Hibernate DAO Declaration -->
	<!-- <bean id="hibernateExpenseDAO" class="eu.tbelina.spring.dao.impl.hibernate.HibernateExpenseDAO">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean> -->
	
	<!-- TODO: JPA DAO Declaration -->
	<!-- 	<bean id="jpaExpenseDAO" class="eu.tbelina.spring.dao.impl.jpa.JpaExpenseDAO">
		<property name="em" ref="emf" />
	</bean> -->
	
	
	<!-- JDBC Data Source Declaration -->
	<!-- <bean id="jdbcDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">		
		<property name="driverClassName" value="org.postgresql.Driver" />
		<property name="url" value="jdbc:postgresql://localhost:5432/SpringProject" />
		<property name="username" value="postgres" />
		<property name="password" value="postgres" />
	</bean> -->

    <!-- Hibernate Data Source Declaration -->
	<!-- <bean id="hibernateDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="org.postgresql.Driver" />
		<property name="jdbcUrl" value="jdbc:postgresql://localhost:5432/SpringProject" />
		<property name="user" value="postgres" />
		<property name="password" value="postgres" />
		<property name="maxPoolSize" value="10" />
		<property name="maxStatements" value="0" />
		<property name="minPoolSize" value="5" />
	</bean> -->
	
	<!-- Session Factory Declaration -->
	<!-- <bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="hibernateDataSource" />
		 <property name="annotatedClasses">
			<list>
				<value>eu.tbelina.spring.model.Expense</value> 
			</list>
		</property> 
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.show_sql">true</prop>
			</props>
		</property>
 
	</bean>-->

	<!-- Enable the configuration of transactional behavior based on annotations -->
	<!-- <tx:annotation-driven transaction-manager="txManager" />   -->

	<!-- Transaction Manager is defined -->
	<!-- <bean id="txManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean> -->  
	
	
<!-- 	<context:component-scan base-package="eu.tbelina.spring.*" /> -->
		
</beans>
